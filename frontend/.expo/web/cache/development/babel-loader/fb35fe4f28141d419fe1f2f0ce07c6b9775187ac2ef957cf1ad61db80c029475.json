{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport View from \"react-native-web/dist/exports/View\";\nimport styles from \"./styles\";\nimport { UserMessage } from \"../../../../components/UserMessage\";\nimport { MessageInput } from \"../MessageInput\";\nimport { useAuth } from \"../../../../context/AuthContext\";\nimport { useRequest } from \"../../../../context/RequestContext\";\nimport { API } from \"../../../../Api\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LogContainer = function LogContainer(_ref) {\n  var _ref2;\n  var itemId = _ref.itemId;\n  var _useAuth = useAuth(),\n    user = _useAuth.user;\n  var _useRequest = useRequest(),\n    log = _useRequest.log;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    messages = _useState2[0],\n    setMessages = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    refreshing = _useState4[0],\n    setRefreshing = _useState4[1];\n  var flatListRef = useRef(null);\n  var loadMessages = function loadMessages() {\n    return (_ref2 = _ref2 || _asyncToGenerator(function* () {\n      var res = yield fetch(`${API}/messages/${itemId}`);\n      var data = yield res.json();\n      setMessages(data);\n    })).apply(this, arguments);\n  };\n  var renderMessage = function renderMessage(_ref3) {\n    var item = _ref3.item;\n    return _jsx(UserMessage, {\n      userId: item.userId,\n      content: item.content,\n      sentTime: item.sentTime,\n      local: item.userId === user.userId\n    });\n  };\n  useEffect(function () {\n    loadMessages();\n  }, [messages]);\n  var onRefresh = React.useCallback(_asyncToGenerator(function* () {\n    setRefreshing(true);\n    yield loadMessages();\n    setRefreshing(false);\n  }), []);\n  return _jsxs(View, {\n    style: styles.logContainer,\n    children: [_jsx(View, {\n      style: styles.messageContainer,\n      children: _jsx(FlatList, {\n        ref: flatListRef,\n        data: messages,\n        keyExtractor: function keyExtractor(item) {\n          return item.messageId + '';\n        },\n        renderItem: renderMessage,\n        onContentSizeChange: function onContentSizeChange() {\n          return flatListRef.current.scrollToEnd({\n            animated: false\n          });\n        },\n        refreshControl: _jsx(RefreshControl, {\n          refreshing: refreshing,\n          onRefresh: onRefresh\n        })\n      })\n    }), _jsx(MessageInput, {\n      logId: log.logId\n    })]\n  });\n};\nexport default LogContainer;","map":{"version":3,"names":["React","useState","useEffect","useRef","FlatList","RefreshControl","View","styles","UserMessage","MessageInput","useAuth","useRequest","API","jsx","_jsx","jsxs","_jsxs","LogContainer","_ref","_ref2","itemId","_useAuth","user","_useRequest","log","_useState","_useState2","_slicedToArray","messages","setMessages","_useState3","_useState4","refreshing","setRefreshing","flatListRef","loadMessages","_asyncToGenerator","res","fetch","data","json","apply","arguments","renderMessage","_ref3","item","userId","content","sentTime","local","onRefresh","useCallback","style","logContainer","children","messageContainer","ref","keyExtractor","messageId","renderItem","onContentSizeChange","current","scrollToEnd","animated","refreshControl","logId"],"sources":["C:/Users/Mauro Retuerto/Desktop/Mauro/FISI/CICLO 8/Moviles/Test/frontend/users/client/components/LogContainer/LogContainer.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\nimport { FlatList, RefreshControl, View } from 'react-native'\r\n\r\nimport styles from './styles';\r\nimport { UserMessage } from '../../../../components/UserMessage';\r\nimport { MessageInput } from '../MessageInput';\r\n\r\nimport { useAuth } from '../../../../context/AuthContext';\r\nimport { useRequest } from '../../../../context/RequestContext';\r\nimport { API } from '../../../../Api';\r\n\r\nconst LogContainer = ({ itemId }) => {\r\n  const { user } = useAuth();\r\n  const { log } = useRequest();\r\n  const [messages, setMessages] = useState([]);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const flatListRef = useRef(null);\r\n\r\n  const loadMessages = async () => {\r\n    const res = await fetch(`${API}/messages/${itemId}`);\r\n    const data = await res.json();\r\n    setMessages(data);\r\n  }\r\n\r\n  const renderMessage = ({ item }) => {\r\n    return <UserMessage userId={item.userId} content={item.content} sentTime={item.sentTime} local={item.userId === user.userId}/>\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadMessages();\r\n  }, [messages]);\r\n\r\n  const onRefresh = React.useCallback(async () => {\r\n    setRefreshing(true);\r\n    await loadMessages();\r\n    setRefreshing(false);\r\n  }, []);\r\n\r\n  return (\r\n    <View style={styles.logContainer}>\r\n      <View style={styles.messageContainer}>\r\n        <FlatList\r\n          ref={flatListRef}\r\n          data={messages}\r\n          keyExtractor={(item) => item.messageId + ''}\r\n          renderItem={renderMessage}\r\n          onContentSizeChange={() => flatListRef.current.scrollToEnd({ animated: false })}\r\n          refreshControl={\r\n            <RefreshControl\r\n              refreshing={refreshing}\r\n              onRefresh={onRefresh}\r\n            />\r\n          }\r\n        />\r\n      </View>  \r\n      <MessageInput \r\n        logId={log.logId}\r\n      />\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default LogContainer"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAA,OAAAC,QAAA;AAAA,OAAAC,cAAA;AAAA,OAAAC,IAAA;AAG1D,OAAOC,MAAM;AACb,SAASC,WAAW;AACpB,SAASC,YAAY;AAErB,SAASC,OAAO;AAChB,SAASC,UAAU;AACnB,SAASC,GAAG;AAA0B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEtC,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAAC,IAAA,EAAmB;EAAA,IAAAC,KAAA;EAAA,IAAbC,MAAM,GAAAF,IAAA,CAANE,MAAM;EAC5B,IAAAC,QAAA,GAAiBX,OAAO,CAAC,CAAC;IAAlBY,IAAI,GAAAD,QAAA,CAAJC,IAAI;EACZ,IAAAC,WAAA,GAAgBZ,UAAU,CAAC,CAAC;IAApBa,GAAG,GAAAD,WAAA,CAAHC,GAAG;EACX,IAAAC,SAAA,GAAgCxB,QAAQ,CAAC,EAAE,CAAC;IAAAyB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAArCG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAC5B,IAAAI,UAAA,GAAoC7B,QAAQ,CAAC,KAAK,CAAC;IAAA8B,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA5CE,UAAU,GAAAD,UAAA;IAAEE,aAAa,GAAAF,UAAA;EAChC,IAAMG,WAAW,GAAG/B,MAAM,CAAC,IAAI,CAAC;EAEhC,IAAMgC,YAAY,YAAZA,YAAYA,CAAA;IAAA,QAAAhB,KAAA,GAAAA,KAAA,IAAAiB,iBAAA,CAAG,aAAY;MAC/B,IAAMC,GAAG,SAASC,KAAK,CAAE,GAAE1B,GAAI,aAAYQ,MAAO,EAAC,CAAC;MACpD,IAAMmB,IAAI,SAASF,GAAG,CAACG,IAAI,CAAC,CAAC;MAC7BX,WAAW,CAACU,IAAI,CAAC;IACnB,CAAC,GAAAE,KAAA,OAAAC,SAAA;EAAA;EAED,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAAC,KAAA,EAAiB;IAAA,IAAXC,IAAI,GAAAD,KAAA,CAAJC,IAAI;IAC3B,OAAO/B,IAAA,CAACN,WAAW;MAACsC,MAAM,EAAED,IAAI,CAACC,MAAO;MAACC,OAAO,EAAEF,IAAI,CAACE,OAAQ;MAACC,QAAQ,EAAEH,IAAI,CAACG,QAAS;MAACC,KAAK,EAAEJ,IAAI,CAACC,MAAM,KAAKxB,IAAI,CAACwB;IAAO,CAAC,CAAC;EAChI,CAAC;EAED5C,SAAS,CAAC,YAAM;IACdiC,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACP,QAAQ,CAAC,CAAC;EAEd,IAAMsB,SAAS,GAAGlD,KAAK,CAACmD,WAAW,CAAAf,iBAAA,CAAC,aAAY;IAC9CH,aAAa,CAAC,IAAI,CAAC;IACnB,MAAME,YAAY,CAAC,CAAC;IACpBF,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC,GAAE,EAAE,CAAC;EAEN,OACEjB,KAAA,CAACV,IAAI;IAAC8C,KAAK,EAAE7C,MAAM,CAAC8C,YAAa;IAAAC,QAAA,GAC/BxC,IAAA,CAACR,IAAI;MAAC8C,KAAK,EAAE7C,MAAM,CAACgD,gBAAiB;MAAAD,QAAA,EACnCxC,IAAA,CAACV,QAAQ;QACPoD,GAAG,EAAEtB,WAAY;QACjBK,IAAI,EAAEX,QAAS;QACf6B,YAAY,EAAE,SAAAA,aAACZ,IAAI;UAAA,OAAKA,IAAI,CAACa,SAAS,GAAG,EAAE;QAAA,CAAC;QAC5CC,UAAU,EAAEhB,aAAc;QAC1BiB,mBAAmB,EAAE,SAAAA,oBAAA;UAAA,OAAM1B,WAAW,CAAC2B,OAAO,CAACC,WAAW,CAAC;YAAEC,QAAQ,EAAE;UAAM,CAAC,CAAC;QAAA,CAAC;QAChFC,cAAc,EACZlD,IAAA,CAACT,cAAc;UACb2B,UAAU,EAAEA,UAAW;UACvBkB,SAAS,EAAEA;QAAU,CACtB;MACF,CACF;IAAC,CACE,CAAC,EACPpC,IAAA,CAACL,YAAY;MACXwD,KAAK,EAAEzC,GAAG,CAACyC;IAAM,CAClB,CAAC;EAAA,CACE,CAAC;AAEX,CAAC;AAED,eAAehD,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}