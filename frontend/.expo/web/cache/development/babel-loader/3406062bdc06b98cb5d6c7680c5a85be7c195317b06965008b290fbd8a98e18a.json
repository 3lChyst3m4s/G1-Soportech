{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Layout } from \"../../../../components/Layout\";\nimport styles from \"./styles\";\nimport rojo from \"../../../../assets/images/rojo.png\";\nimport amarillo from \"../../../../assets/images/amarillo.png\";\nimport verde from \"../../../../assets/images/verde.png\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar HomeScreen = function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState([{\n      id: 1,\n      nombre: 'Item 1',\n      titulo: 'Título 1',\n      fecha: '01/01/2023',\n      estado: 'verde'\n    }, {\n      id: 2,\n      nombre: 'Item 2',\n      titulo: 'Título 2',\n      fecha: '02/01/2023',\n      estado: 'verde'\n    }, {\n      id: 3,\n      nombre: 'Item 3',\n      titulo: 'Título 3',\n      fecha: '03/01/2023',\n      estado: 'verde'\n    }, {\n      id: 4,\n      nombre: 'Item 3aaaaaaaaaaa',\n      titulo: 'Título 3aaaaaaaaa',\n      fecha: '03/01/2023',\n      estado: 'verde'\n    }, {\n      id: 5,\n      nombre: 'Item 3aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',\n      titulo: 'Título 3aaaaaaaaaaaaaaaaaaaaaaaaaaaa',\n      fecha: '03/01/2023',\n      estado: 'verde'\n    }]),\n    _useState2 = _slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setData = _useState2[1];\n  useEffect(function () {\n    var interval1 = setTimeout(function () {\n      var updatedData = data.map(function (item) {\n        return _objectSpread(_objectSpread({}, item), {}, {\n          estado: 'amarillo'\n        });\n      });\n      setData(updatedData);\n    }, 5000);\n    var interval2 = setTimeout(function () {\n      var updatedData = data.map(function (item) {\n        return _objectSpread(_objectSpread({}, item), {}, {\n          estado: 'rojo'\n        });\n      });\n      setData(updatedData);\n    }, 15000);\n    return function () {\n      clearTimeout(interval1);\n      clearTimeout(interval2);\n    };\n  }, []);\n  return _jsx(Layout, {\n    navigation: navigation,\n    title: \"Inicio\",\n    children: _jsx(ScrollView, {\n      contentContainerStyle: styles.container,\n      children: _jsx(ScrollView, {\n        horizontal: true,\n        children: _jsx(View, {\n          style: styles.tableContainer,\n          children: _jsxs(View, {\n            style: styles.table,\n            children: [_jsxs(View, {\n              style: styles.tableHeader,\n              children: [_jsx(Text, {\n                style: [styles.headerCell, {\n                  width: 100\n                }],\n                children: \"Nombre\"\n              }), _jsx(Text, {\n                style: [styles.headerCell, {\n                  width: 200\n                }],\n                children: \"T\\xEDtulo\"\n              }), _jsx(Text, {\n                style: [styles.headerCell, {\n                  width: 100\n                }],\n                children: \"Fecha\"\n              }), _jsx(Text, {\n                style: [styles.headerCell, {\n                  width: 150\n                }],\n                children: \"Estado\"\n              })]\n            }), data.map(function (item) {\n              return _jsxs(TouchableOpacity, {\n                style: styles.tableRow,\n                children: [_jsx(Text, {\n                  style: [styles.tableCell, {\n                    width: 100\n                  }],\n                  children: item.nombre\n                }), _jsx(Text, {\n                  style: [styles.tableCell, {\n                    width: 200\n                  }],\n                  children: item.titulo\n                }), _jsx(Text, {\n                  style: [styles.tableCell, {\n                    width: 100\n                  }],\n                  children: item.fecha\n                }), _jsx(View, {\n                  style: [{\n                    width: 150\n                  }, styles.statusCell],\n                  children: _jsxs(View, {\n                    style: styles.statusImageContainer,\n                    children: [item.estado === 'rojo' && _jsx(Image, {\n                      source: rojo,\n                      style: styles.statusImage\n                    }), item.estado === 'amarillo' && _jsx(Image, {\n                      source: amarillo,\n                      style: styles.statusImage\n                    }), item.estado === 'verde' && _jsx(Image, {\n                      source: verde,\n                      style: styles.statusImage\n                    })]\n                  })\n                })]\n              }, item.id);\n            })]\n          })\n        })\n      })\n    })\n  });\n};\nexport default HomeScreen;","map":{"version":3,"names":["React","useState","useEffect","View","Text","ScrollView","TouchableOpacity","Image","Layout","styles","rojo","amarillo","verde","jsx","_jsx","jsxs","_jsxs","HomeScreen","_ref","navigation","_useState","id","nombre","titulo","fecha","estado","_useState2","_slicedToArray","data","setData","interval1","setTimeout","updatedData","map","item","_objectSpread","interval2","clearTimeout","title","children","contentContainerStyle","container","horizontal","style","tableContainer","table","tableHeader","headerCell","width","tableRow","tableCell","statusCell","statusImageContainer","source","statusImage"],"sources":["C:/Users/Mauro Retuerto/Desktop/Mauro/FISI/CICLO 8/Moviles/Test/frontend/users/supervisor/screens/HomeScreen/HomeScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, ScrollView, TouchableOpacity, Image } from 'react-native';\r\nimport { Layout } from \"../../../../components/Layout\";\r\nimport styles from './styles';\r\n\r\nimport rojo from \"../../../../assets/images/rojo.png\";\r\nimport amarillo from \"../../../../assets/images/amarillo.png\";\r\nimport verde from \"../../../../assets/images/verde.png\";\r\n\r\nconst HomeScreen = ({ navigation }) => {\r\n  const [data, setData] = useState([\r\n    { id: 1, nombre: 'Item 1', titulo: 'Título 1', fecha: '01/01/2023', estado: 'verde' },\r\n    { id: 2, nombre: 'Item 2', titulo: 'Título 2', fecha: '02/01/2023', estado: 'verde' },\r\n    { id: 3, nombre: 'Item 3', titulo: 'Título 3', fecha: '03/01/2023', estado: 'verde' },\r\n    { id: 4, nombre: 'Item 3aaaaaaaaaaa', titulo: 'Título 3aaaaaaaaa', fecha: '03/01/2023', estado: 'verde' },\r\n    { id: 5, nombre: 'Item 3aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', titulo: 'Título 3aaaaaaaaaaaaaaaaaaaaaaaaaaaa', fecha: '03/01/2023', estado: 'verde' },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    // Cambiar el estado a \"amarillo\" después de 5 segundos\r\n    const interval1 = setTimeout(() => {\r\n      const updatedData = data.map(item => ({ ...item, estado: 'amarillo' }));\r\n      setData(updatedData);\r\n    }, 5000);\r\n\r\n    // Cambiar el estado a \"rojo\" después de 15 segundos\r\n    const interval2 = setTimeout(() => {\r\n      const updatedData = data.map(item => ({ ...item, estado: 'rojo' }));\r\n      setData(updatedData);\r\n    }, 15000);\r\n\r\n    return () => {\r\n      clearTimeout(interval1);\r\n      clearTimeout(interval2);\r\n    };\r\n  }, []); // El efecto solo se ejecuta una vez al montar el componente\r\n\r\n  return (\r\n    <Layout \r\n      navigation={navigation}\r\n      title=\"Inicio\"\r\n    >\r\n      <ScrollView contentContainerStyle={styles.container}>\r\n        <ScrollView horizontal>\r\n          <View style={styles.tableContainer}>\r\n            <View style={styles.table}>\r\n              <View style={styles.tableHeader}>\r\n                <Text style={[styles.headerCell, { width: 100 }]}>Nombre</Text>\r\n                <Text style={[styles.headerCell, { width: 200 }]}>Título</Text>\r\n                <Text style={[styles.headerCell, { width: 100 }]}>Fecha</Text>\r\n                <Text style={[styles.headerCell, { width: 150 }]}>Estado</Text>\r\n              </View>\r\n              {data.map(item => (\r\n                <TouchableOpacity\r\n                  style={styles.tableRow}\r\n                  key={item.id}\r\n                >\r\n                  <Text style={[styles.tableCell, { width: 100 }]}>{item.nombre}</Text>\r\n                  <Text style={[styles.tableCell, { width: 200 }]}>{item.titulo}</Text>\r\n                  <Text style={[styles.tableCell, { width: 100 }]}>{item.fecha}</Text>\r\n                  <View style={[{ width: 150 }, styles.statusCell]}>\r\n                    <View style={styles.statusImageContainer}>\r\n                      {item.estado === 'rojo' && <Image source={rojo} style={styles.statusImage} />}\r\n                      {item.estado === 'amarillo' && <Image source={amarillo} style={styles.statusImage} />}\r\n                      {item.estado === 'verde' && <Image source={verde} style={styles.statusImage} />}\r\n                    </View>\r\n                  </View>\r\n                </TouchableOpacity>\r\n              ))}\r\n            </View>\r\n          </View>\r\n        </ScrollView>\r\n      </ScrollView>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}