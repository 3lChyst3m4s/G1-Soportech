{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Layout } from \"../../../../components/Layout\";\nimport styles from \"./styles\";\nimport { getRequests } from \"../../../../Api\";\nimport { getTrafficLightColor } from \"../../utils/trafficLight\";\nimport rojo from \"../../../../assets/images/rojo.png\";\nimport amarillo from \"../../../../assets/images/amarillo.png\";\nimport verde from \"../../../../assets/images/verde.png\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar HomeScreen = function HomeScreen(_ref) {\n  var _ref2;\n  var navigation = _ref.navigation;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setData = _useState2[1];\n  var loadRequests = function loadRequests() {\n    return (_ref2 = _ref2 || _asyncToGenerator(function* () {\n      var response = yield getRequests(1);\n      var json = yield response.data;\n      setData(json);\n    })).apply(this, arguments);\n  };\n  useEffect(function () {\n    loadRequests();\n  }, []);\n  return _jsx(Layout, {\n    navigation: navigation,\n    title: \"Inicio\",\n    children: _jsx(ScrollView, {\n      contentContainerStyle: styles.container,\n      children: _jsx(ScrollView, {\n        horizontal: true,\n        children: _jsx(View, {\n          style: styles.tableContainer,\n          children: _jsxs(View, {\n            style: styles.table,\n            children: [_jsxs(View, {\n              style: styles.tableHeader,\n              children: [_jsx(Text, {\n                style: [styles.headerCell, {\n                  width: 100\n                }],\n                children: \"Nombre\"\n              }), _jsx(Text, {\n                style: [styles.headerCell, {\n                  width: 200\n                }],\n                children: \"T\\xEDtulo\"\n              }), _jsx(Text, {\n                style: [styles.headerCell, {\n                  width: 100\n                }],\n                children: \"Fecha\"\n              }), _jsx(Text, {\n                style: [styles.headerCell, {\n                  width: 150\n                }],\n                children: \"Estado\"\n              })]\n            }), data.map(function (item) {\n              return _jsxs(TouchableOpacity, {\n                style: styles.tableRow,\n                children: [_jsx(Text, {\n                  style: [styles.tableCell, {\n                    width: 100\n                  }],\n                  children: item.requestId\n                }), _jsx(Text, {\n                  style: [styles.tableCell, {\n                    width: 200\n                  }],\n                  children: item.title\n                }), _jsx(Text, {\n                  style: [styles.tableCell, {\n                    width: 100\n                  }],\n                  children: item.endTime\n                }), _jsx(View, {\n                  style: [{\n                    width: 150\n                  }, styles.statusCell],\n                  children: _jsxs(View, {\n                    style: styles.statusImageContainer,\n                    children: [getTrafficLightColor(item.endTime) === 'rojo' && _jsx(Image, {\n                      source: rojo,\n                      style: styles.statusImage\n                    }), getTrafficLightColor(item.endTime) === 'amarillo' && _jsx(Image, {\n                      source: amarillo,\n                      style: styles.statusImage\n                    }), getTrafficLightColor(item.endTime) === 'verde' && _jsx(Image, {\n                      source: verde,\n                      style: styles.statusImage\n                    })]\n                  })\n                })]\n              }, item.requestId);\n            })]\n          })\n        })\n      })\n    })\n  });\n};\nexport default HomeScreen;","map":{"version":3,"names":["React","useState","useEffect","View","Text","ScrollView","TouchableOpacity","Image","Layout","styles","getRequests","getTrafficLightColor","rojo","amarillo","verde","jsx","_jsx","jsxs","_jsxs","HomeScreen","_ref","_ref2","navigation","_useState","_useState2","_slicedToArray","data","setData","loadRequests","_asyncToGenerator","response","json","apply","arguments","title","children","contentContainerStyle","container","horizontal","style","tableContainer","table","tableHeader","headerCell","width","map","item","tableRow","tableCell","requestId","endTime","statusCell","statusImageContainer","source","statusImage"],"sources":["C:/Users/USER/Downloads/G1-Soportechv13/Test/frontend/users/supervisor/screens/HomeScreen/HomeScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, ScrollView, TouchableOpacity, Image } from 'react-native';\r\nimport { Layout } from \"../../../../components/Layout\";\r\nimport styles from './styles';\r\n\r\nimport { getRequests } from '../../../../Api';\r\nimport { getTrafficLightColor } from '../../utils/trafficLight'\r\n\r\nimport rojo from \"../../../../assets/images/rojo.png\";\r\nimport amarillo from \"../../../../assets/images/amarillo.png\";\r\nimport verde from \"../../../../assets/images/verde.png\";\r\n\r\n\r\nconst HomeScreen = ({ navigation }) => {\r\n  const [data, setData] = useState([]);\r\n\r\n  const loadRequests = async () => {\r\n    const response = await getRequests(1);\r\n    const json = await response.data;\r\n    setData(json);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadRequests();\r\n  }, []);\r\n\r\n  return (\r\n    <Layout \r\n      navigation={navigation}\r\n      title=\"Inicio\"\r\n    >\r\n      <ScrollView contentContainerStyle={styles.container}>\r\n        <ScrollView horizontal>\r\n          <View style={styles.tableContainer}>\r\n            <View style={styles.table}>\r\n              <View style={styles.tableHeader}>\r\n                <Text style={[styles.headerCell, { width: 100 }]}>Nombre</Text>\r\n                <Text style={[styles.headerCell, { width: 200 }]}>TÃ­tulo</Text>\r\n                <Text style={[styles.headerCell, { width: 100 }]}>Fecha</Text>\r\n                <Text style={[styles.headerCell, { width: 150 }]}>Estado</Text>\r\n              </View>\r\n              {data.map(item => (\r\n                <TouchableOpacity\r\n                  style={styles.tableRow}\r\n                  key={item.requestId}\r\n                >\r\n                  <Text style={[styles.tableCell, { width: 100 }]}>{item.requestId}</Text>\r\n                  <Text style={[styles.tableCell, { width: 200 }]}>{item.title}</Text>\r\n                  <Text style={[styles.tableCell, { width: 100 }]}>{item.endTime}</Text>\r\n                  <View style={[{ width: 150 }, styles.statusCell]}>\r\n                    <View style={styles.statusImageContainer}>\r\n                      {getTrafficLightColor(item.endTime) === 'rojo' && <Image source={rojo} style={styles.statusImage} />}\r\n                      {getTrafficLightColor(item.endTime) === 'amarillo' && <Image source={amarillo} style={styles.statusImage} />}\r\n                      {getTrafficLightColor(item.endTime) === 'verde' && <Image source={verde} style={styles.statusImage} />}\r\n                    </View>\r\n                  </View>\r\n                </TouchableOpacity>\r\n              ))}\r\n            </View>\r\n          </View>\r\n        </ScrollView>\r\n      </ScrollView>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}