{"ast":null,"code":"import moment from 'moment';\nexport var getTrafficLightColor = function getTrafficLightColor(endTime) {\n  var currentTime = new Date();\n  var targetTime = moment(endTime, 'DD/MM/YYYY').toDate();\n  var timeDifference = targetTime - currentTime;\n  var minutesDifference = Math.ceil(timeDifference / (1000 * 60));\n  if (timeDifference <= 0) {\n    return 'rojo';\n  } else if (minutesDifference <= 1440 && minutesDifference > 60) {\n    return 'amarillo';\n  } else if (minutesDifference <= 60) {\n    return 'rojo';\n  } else {\n    return 'verde';\n  }\n};","map":{"version":3,"names":["moment","getTrafficLightColor","endTime","currentTime","Date","targetTime","toDate","timeDifference","minutesDifference","Math","ceil"],"sources":["C:/Users/USER/Downloads/G1-Soportechv13/Test/frontend/users/supervisor/utils/trafficLight.js"],"sourcesContent":["import moment from 'moment';\r\n\r\nexport const getTrafficLightColor = endTime => {\r\n  const currentTime = new Date();\r\n  const targetTime = moment(endTime, 'DD/MM/YYYY').toDate();\r\n\r\n  const timeDifference = targetTime - currentTime;\r\n  const minutesDifference = Math.ceil(timeDifference / (1000 * 60));\r\n\r\n  if (timeDifference <= 0) {\r\n    return 'rojo';\r\n  } else if (minutesDifference <= 1440 && minutesDifference > 60) {\r\n    // Entre 1 y 2 días\r\n    return 'amarillo';\r\n  } else if (minutesDifference <= 60) {\r\n    // Menos de 1 día\r\n    return 'rojo';\r\n  } else {\r\n    return 'verde';\r\n  }\r\n};"],"mappings":"AAAA,OAAOA,MAAM,MAAM,QAAQ;AAE3B,OAAO,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAGC,OAAO,EAAI;EAC7C,IAAMC,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC;EAC9B,IAAMC,UAAU,GAAGL,MAAM,CAACE,OAAO,EAAE,YAAY,CAAC,CAACI,MAAM,CAAC,CAAC;EAEzD,IAAMC,cAAc,GAAGF,UAAU,GAAGF,WAAW;EAC/C,IAAMK,iBAAiB,GAAGC,IAAI,CAACC,IAAI,CAACH,cAAc,IAAI,IAAI,GAAG,EAAE,CAAC,CAAC;EAEjE,IAAIA,cAAc,IAAI,CAAC,EAAE;IACvB,OAAO,MAAM;EACf,CAAC,MAAM,IAAIC,iBAAiB,IAAI,IAAI,IAAIA,iBAAiB,GAAG,EAAE,EAAE;IAE9D,OAAO,UAAU;EACnB,CAAC,MAAM,IAAIA,iBAAiB,IAAI,EAAE,EAAE;IAElC,OAAO,MAAM;EACf,CAAC,MAAM;IACL,OAAO,OAAO;EAChB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}