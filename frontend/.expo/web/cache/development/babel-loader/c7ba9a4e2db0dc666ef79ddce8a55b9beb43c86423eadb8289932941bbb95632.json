{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Layout } from \"../../../../components/Layout\";\nimport styles from \"./styles\";\nimport { getRequests } from \"../../../../Api\";\nimport { getTrafficLightColor } from \"../../utils/trafficLight\";\nimport rojo from \"../../../../assets/images/rojo.png\";\nimport amarillo from \"../../../../assets/images/amarillo.png\";\nimport verde from \"../../../../assets/images/verde.png\";\nimport { useIsFocused } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar HomeScreen = function HomeScreen(_ref) {\n  var _ref2;\n  var navigation = _ref.navigation;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setData = _useState2[1];\n  var isFocused = useIsFocused();\n  var loadRequests = function loadRequests() {\n    return (_ref2 = _ref2 || _asyncToGenerator(function* () {\n      var response = yield getRequests(1);\n      var json = yield response.data;\n      setData(json);\n    })).apply(this, arguments);\n  };\n  useEffect(function () {\n    loadRequests();\n  }, [isFocused]);\n  return _jsx(Layout, {\n    navigation: navigation,\n    title: \"Inicio\",\n    children: _jsx(ScrollView, {\n      contentContainerStyle: styles.container,\n      children: _jsx(ScrollView, {\n        horizontal: true,\n        children: _jsx(View, {\n          style: styles.tableContainer,\n          children: _jsxs(View, {\n            style: styles.table,\n            children: [_jsxs(View, {\n              style: styles.tableHeader,\n              children: [_jsx(Text, {\n                style: [styles.headerCell, {\n                  width: 100\n                }],\n                children: \"Codigo\"\n              }), _jsx(Text, {\n                style: [styles.headerCell, {\n                  width: 200\n                }],\n                children: \"T\\xEDtulo\"\n              }), _jsx(Text, {\n                style: [styles.headerCell, {\n                  width: 100\n                }],\n                children: \"Fecha\"\n              }), _jsx(Text, {\n                style: [styles.headerCell, {\n                  width: 150\n                }],\n                children: \"Estado\"\n              })]\n            }), data.map(function (item) {\n              return _jsxs(TouchableOpacity, {\n                style: styles.tableRow,\n                children: [_jsx(Text, {\n                  style: [styles.tableCell, {\n                    width: 100\n                  }],\n                  children: item.requestId\n                }), _jsx(Text, {\n                  style: [styles.tableCell, {\n                    width: 200\n                  }],\n                  children: item.title\n                }), _jsx(Text, {\n                  style: [styles.tableCell, {\n                    width: 100\n                  }],\n                  children: item.endTime\n                }), _jsx(View, {\n                  style: [{\n                    width: 150\n                  }, styles.statusCell],\n                  children: _jsxs(View, {\n                    style: styles.statusImageContainer,\n                    children: [getTrafficLightColor(item.endTime) === 'rojo' && _jsx(Image, {\n                      source: rojo,\n                      style: styles.statusImage\n                    }), getTrafficLightColor(item.endTime) === 'amarillo' && _jsx(Image, {\n                      source: amarillo,\n                      style: styles.statusImage\n                    }), getTrafficLightColor(item.endTime) === 'verde' && _jsx(Image, {\n                      source: verde,\n                      style: styles.statusImage\n                    })]\n                  })\n                })]\n              }, item.requestId);\n            })]\n          })\n        })\n      })\n    })\n  });\n};\nexport default HomeScreen;","map":{"version":3,"names":["React","useState","useEffect","View","Text","ScrollView","TouchableOpacity","Image","Layout","styles","getRequests","getTrafficLightColor","rojo","amarillo","verde","useIsFocused","jsx","_jsx","jsxs","_jsxs","HomeScreen","_ref","_ref2","navigation","_useState","_useState2","_slicedToArray","data","setData","isFocused","loadRequests","_asyncToGenerator","response","json","apply","arguments","title","children","contentContainerStyle","container","horizontal","style","tableContainer","table","tableHeader","headerCell","width","map","item","tableRow","tableCell","requestId","endTime","statusCell","statusImageContainer","source","statusImage"],"sources":["C:/Users/Mauro Retuerto/Desktop/Mauro/FISI/CICLO 8/Moviles/G1-Soportech/Test/frontend/users/supervisor/screens/HomeScreen/HomeScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, ScrollView, TouchableOpacity, Image } from 'react-native';\nimport { Layout } from \"../../../../components/Layout\";\nimport styles from './styles';\n\nimport { getRequests } from '../../../../Api';\nimport { getTrafficLightColor } from '../../utils/trafficLight'\n\nimport rojo from \"../../../../assets/images/rojo.png\";\nimport amarillo from \"../../../../assets/images/amarillo.png\";\nimport verde from \"../../../../assets/images/verde.png\";\n\nimport { useIsFocused } from '@react-navigation/native';\n\nconst HomeScreen = ({ navigation }) => {\n  const [data, setData] = useState([]);\n  const isFocused = useIsFocused();\n\n  const loadRequests = async () => {\n    const response = await getRequests(1);\n    const json = await response.data;\n    setData(json);\n  };\n\n  useEffect(() => {\n    loadRequests();\n  }, [isFocused]);\n\n  return (\n    <Layout \n      navigation={navigation}\n      title=\"Inicio\"\n    >\n      <ScrollView contentContainerStyle={styles.container}>\n        <ScrollView horizontal>\n          <View style={styles.tableContainer}>\n            <View style={styles.table}>\n              <View style={styles.tableHeader}>\n                <Text style={[styles.headerCell, { width: 100 }]}>Codigo</Text>\n                <Text style={[styles.headerCell, { width: 200 }]}>TÃ­tulo</Text>\n                <Text style={[styles.headerCell, { width: 100 }]}>Fecha</Text>\n                <Text style={[styles.headerCell, { width: 150 }]}>Estado</Text>\n              </View>\n              {data.map(item => (\n                <TouchableOpacity\n                  style={styles.tableRow}\n                  key={item.requestId}\n                >\n                  <Text style={[styles.tableCell, { width: 100 }]}>{item.requestId}</Text>\n                  <Text style={[styles.tableCell, { width: 200 }]}>{item.title}</Text>\n                  <Text style={[styles.tableCell, { width: 100 }]}>{item.endTime}</Text>\n                  <View style={[{ width: 150 }, styles.statusCell]}>\n                    <View style={styles.statusImageContainer}>\n                      {getTrafficLightColor(item.endTime) === 'rojo' && <Image source={rojo} style={styles.statusImage} />}\n                      {getTrafficLightColor(item.endTime) === 'amarillo' && <Image source={amarillo} style={styles.statusImage} />}\n                      {getTrafficLightColor(item.endTime) === 'verde' && <Image source={verde} style={styles.statusImage} />}\n                    </View>\n                  </View>\n                </TouchableOpacity>\n              ))}\n            </View>\n          </View>\n        </ScrollView>\n      </ScrollView>\n    </Layout>\n  );\n};\n\nexport default HomeScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}