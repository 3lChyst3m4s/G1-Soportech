{"ast":null,"code":"import React, { useRef, useEffect } from 'react';\nimport * as echarts from 'echarts/core';\nimport { LineChart, PieChart } from 'echarts/charts';\nimport { GridComponent, TooltipComponent, LegendComponent } from 'echarts/components';\nimport { SVGRenderer, SvgChart } from '@wuba/react-native-echarts';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\necharts.use([SVGRenderer, LineChart, GridComponent, PieChart, TooltipComponent, LegendComponent]);\nvar LineChartComponent = function LineChartComponent(_ref) {\n  var option = _ref.option;\n  var skiaRef = useRef(null);\n  useEffect(function () {\n    var chart;\n    if (skiaRef.current) {\n      chart = echarts.init(skiaRef.current, 'light', {\n        renderer: 'svg',\n        width: 870,\n        height: 200\n      });\n      chart.setOption(option);\n    }\n    return function () {\n      var _chart;\n      return (_chart = chart) == null ? void 0 : _chart.dispose();\n    };\n  }, []);\n  return _jsx(SvgChart, {\n    ref: skiaRef\n  });\n};\nexport default LineChartComponent;","map":{"version":3,"names":["React","useRef","useEffect","echarts","LineChart","PieChart","GridComponent","TooltipComponent","LegendComponent","SVGRenderer","SvgChart","jsx","_jsx","use","LineChartComponent","_ref","option","skiaRef","chart","current","init","renderer","width","height","setOption","_chart","dispose","ref"],"sources":["C:/Users/Mauro Retuerto/Desktop/Mauro/FISI/CICLO 8/Moviles/G1-Soportech/Test/frontend/users/supervisor/components/LineChartComponent.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport * as echarts from 'echarts/core';\r\nimport { LineChart, PieChart } from 'echarts/charts';\r\nimport { GridComponent, TooltipComponent, LegendComponent } from 'echarts/components';\r\nimport { SVGRenderer, SvgChart } from '@wuba/react-native-echarts';\r\n\r\necharts.use([SVGRenderer, LineChart, GridComponent, PieChart, TooltipComponent, LegendComponent]);\r\n\r\nconst LineChartComponent = ({ option }) => {\r\n  const skiaRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    let chart;\r\n\r\n    if (skiaRef.current) {\r\n      chart = echarts.init(skiaRef.current, 'light', {\r\n        renderer: 'svg',\r\n        width: 870,\r\n        height: 200,\r\n      });\r\n\r\n      chart.setOption(option);\r\n    }\r\n\r\n    return () => chart?.dispose();\r\n  }, []);\r\n\r\n  return (\r\n    <SvgChart ref={skiaRef} />\r\n  );\r\n}\r\n\r\nexport default LineChartComponent;"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAChD,OAAO,KAAKC,OAAO,MAAM,cAAc;AACvC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,gBAAgB;AACpD,SAASC,aAAa,EAAEC,gBAAgB,EAAEC,eAAe,QAAQ,oBAAoB;AACrF,SAASC,WAAW,EAAEC,QAAQ,QAAQ,4BAA4B;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAEnET,OAAO,CAACU,GAAG,CAAC,CAACJ,WAAW,EAAEL,SAAS,EAAEE,aAAa,EAAED,QAAQ,EAAEE,gBAAgB,EAAEC,eAAe,CAAC,CAAC;AAEjG,IAAMM,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAAC,IAAA,EAAmB;EAAA,IAAbC,MAAM,GAAAD,IAAA,CAANC,MAAM;EAClC,IAAMC,OAAO,GAAGhB,MAAM,CAAC,IAAI,CAAC;EAE5BC,SAAS,CAAC,YAAM;IACd,IAAIgB,KAAK;IAET,IAAID,OAAO,CAACE,OAAO,EAAE;MACnBD,KAAK,GAAGf,OAAO,CAACiB,IAAI,CAACH,OAAO,CAACE,OAAO,EAAE,OAAO,EAAE;QAC7CE,QAAQ,EAAE,KAAK;QACfC,KAAK,EAAE,GAAG;QACVC,MAAM,EAAE;MACV,CAAC,CAAC;MAEFL,KAAK,CAACM,SAAS,CAACR,MAAM,CAAC;IACzB;IAEA,OAAO;MAAA,IAAAS,MAAA;MAAA,QAAAA,MAAA,GAAMP,KAAK,qBAALO,MAAA,CAAOC,OAAO,CAAC,CAAC;IAAA;EAC/B,CAAC,EAAE,EAAE,CAAC;EAEN,OACEd,IAAA,CAACF,QAAQ;IAACiB,GAAG,EAAEV;EAAQ,CAAE,CAAC;AAE9B,CAAC;AAED,eAAeH,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}