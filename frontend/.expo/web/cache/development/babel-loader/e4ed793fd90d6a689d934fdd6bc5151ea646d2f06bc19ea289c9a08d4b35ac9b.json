{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport MaterialIcons from '@expo/vector-icons/MaterialIcons';\nimport gStyles from \"./styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Button = function Button(_ref) {\n  var text = _ref.text,\n    buttonStyle = _ref.buttonStyle,\n    color = _ref.color,\n    onPress = _ref.onPress,\n    isFocused = _ref.isFocused,\n    isDisabled = _ref.isDisabled;\n  var styles = gStyles(color, buttonStyle);\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isHovered = _useState2[0],\n    setIsHovered = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isPressed = _useState4[0],\n    setIsPressed = _useState4[1];\n  var handlePress = function handlePress() {\n    if (!isDisabled) {\n      onPress();\n    }\n  };\n  return _jsx(Pressable, {\n    style: function style(_ref2) {\n      var pressed = _ref2.pressed;\n      return [styles.default, isHovered && !pressed && styles.hovered, pressed && styles.pressed, isFocused && styles.focused, isDisabled && styles.disabled];\n    },\n    onPress: handlePress,\n    onPressIn: function onPressIn() {\n      return setIsPressed(true);\n    },\n    onPressOut: function onPressOut() {\n      return setIsPressed(false);\n    },\n    onMouseEnter: function onMouseEnter() {\n      return setIsHovered(true);\n    },\n    onMouseLeave: function onMouseLeave() {\n      return setIsHovered(false);\n    },\n    children: text === 'F' ? _jsx(MaterialIcons, {\n      name: \"add-a-photo\",\n      size: 25,\n      color: \"#fff\"\n    }) : text === 'A' ? _jsx(MaterialIcons, {\n      name: \"file-upload\",\n      size: 25,\n      color: \"#fff\"\n    }) : _jsx(Text, {\n      style: [styles.text, isDisabled && styles.disabledText],\n      children: text\n    })\n  });\n};\nexport default Button;","map":{"version":3,"names":["React","useState","Pressable","Text","MaterialIcons","gStyles","jsx","_jsx","Button","_ref","text","buttonStyle","color","onPress","isFocused","isDisabled","styles","_useState","_useState2","_slicedToArray","isHovered","setIsHovered","_useState3","_useState4","isPressed","setIsPressed","handlePress","style","_ref2","pressed","default","hovered","focused","disabled","onPressIn","onPressOut","onMouseEnter","onMouseLeave","children","name","size","disabledText"],"sources":["C:/Users/Mauro Retuerto/Desktop/Mauro/FISI/CICLO 8/Moviles/G1-Soportech/Test/frontend/components/Button/Button.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Pressable, Text } from 'react-native';\n\nimport MaterialIcons from '@expo/vector-icons/MaterialIcons';\n\nimport gStyles from './styles';\n\nconst Button = ({ text, buttonStyle, color, onPress, isFocused, isDisabled }) => {\n  const styles = gStyles(color, buttonStyle);\n  const [isHovered, setIsHovered] = useState(false);\n  const [isPressed, setIsPressed] = useState(false);\n\n  const handlePress = () => {\n    if (!isDisabled) {\n      onPress();\n    }\n  };\n\n  return (\n    <Pressable\n      style={({ pressed }) => [\n        styles.default,\n        isHovered && !pressed && styles.hovered,\n        pressed && styles.pressed,\n        isFocused && styles.focused,\n        isDisabled && styles.disabled,\n      ]}\n      onPress={handlePress}\n      onPressIn={() => setIsPressed(true)}\n      onPressOut={() => setIsPressed(false)}\n      onMouseEnter={() => setIsHovered(true)}\n      onMouseLeave={() => setIsHovered(false)}\n    >\n      {\n        text === 'F' ? (\n          <MaterialIcons name=\"add-a-photo\" size={25} color=\"#fff\" />\n        ) : text === 'A' ? (\n          <MaterialIcons name=\"file-upload\" size={25} color=\"#fff\" />\n        ) : (\n          <Text style={[styles.text, isDisabled && styles.disabledText]}>{text}</Text>\n        )\n      }\n    </Pressable>\n  );\n};\n\nexport default Button;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,SAAA;AAAA,OAAAC,IAAA;AAGxC,OAAOC,aAAa,MAAM,kCAAkC;AAE5D,OAAOC,OAAO;AAAiB,SAAAC,GAAA,IAAAC,IAAA;AAE/B,IAAMC,MAAM,GAAG,SAATA,MAAMA,CAAAC,IAAA,EAAqE;EAAA,IAA/DC,IAAI,GAAAD,IAAA,CAAJC,IAAI;IAAEC,WAAW,GAAAF,IAAA,CAAXE,WAAW;IAAEC,KAAK,GAAAH,IAAA,CAALG,KAAK;IAAEC,OAAO,GAAAJ,IAAA,CAAPI,OAAO;IAAEC,SAAS,GAAAL,IAAA,CAATK,SAAS;IAAEC,UAAU,GAAAN,IAAA,CAAVM,UAAU;EACxE,IAAMC,MAAM,GAAGX,OAAO,CAACO,KAAK,EAAED,WAAW,CAAC;EAC1C,IAAAM,SAAA,GAAkChB,QAAQ,CAAC,KAAK,CAAC;IAAAiB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA1CG,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAC9B,IAAAI,UAAA,GAAkCrB,QAAQ,CAAC,KAAK,CAAC;IAAAsB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA1CE,SAAS,GAAAD,UAAA;IAAEE,YAAY,GAAAF,UAAA;EAE9B,IAAMG,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IACxB,IAAI,CAACX,UAAU,EAAE;MACfF,OAAO,CAAC,CAAC;IACX;EACF,CAAC;EAED,OACEN,IAAA,CAACL,SAAS;IACRyB,KAAK,EAAE,SAAAA,MAAAC,KAAA;MAAA,IAAGC,OAAO,GAAAD,KAAA,CAAPC,OAAO;MAAA,OAAO,CACtBb,MAAM,CAACc,OAAO,EACdV,SAAS,IAAI,CAACS,OAAO,IAAIb,MAAM,CAACe,OAAO,EACvCF,OAAO,IAAIb,MAAM,CAACa,OAAO,EACzBf,SAAS,IAAIE,MAAM,CAACgB,OAAO,EAC3BjB,UAAU,IAAIC,MAAM,CAACiB,QAAQ,CAC9B;IAAA,CAAC;IACFpB,OAAO,EAAEa,WAAY;IACrBQ,SAAS,EAAE,SAAAA,UAAA;MAAA,OAAMT,YAAY,CAAC,IAAI,CAAC;IAAA,CAAC;IACpCU,UAAU,EAAE,SAAAA,WAAA;MAAA,OAAMV,YAAY,CAAC,KAAK,CAAC;IAAA,CAAC;IACtCW,YAAY,EAAE,SAAAA,aAAA;MAAA,OAAMf,YAAY,CAAC,IAAI,CAAC;IAAA,CAAC;IACvCgB,YAAY,EAAE,SAAAA,aAAA;MAAA,OAAMhB,YAAY,CAAC,KAAK,CAAC;IAAA,CAAC;IAAAiB,QAAA,EAGtC5B,IAAI,KAAK,GAAG,GACVH,IAAA,CAACH,aAAa;MAACmC,IAAI,EAAC,aAAa;MAACC,IAAI,EAAE,EAAG;MAAC5B,KAAK,EAAC;IAAM,CAAE,CAAC,GACzDF,IAAI,KAAK,GAAG,GACdH,IAAA,CAACH,aAAa;MAACmC,IAAI,EAAC,aAAa;MAACC,IAAI,EAAE,EAAG;MAAC5B,KAAK,EAAC;IAAM,CAAE,CAAC,GAE3DL,IAAA,CAACJ,IAAI;MAACwB,KAAK,EAAE,CAACX,MAAM,CAACN,IAAI,EAAEK,UAAU,IAAIC,MAAM,CAACyB,YAAY,CAAE;MAAAH,QAAA,EAAE5B;IAAI,CAAO;EAC5E,CAEM,CAAC;AAEhB,CAAC;AAED,eAAeF,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}