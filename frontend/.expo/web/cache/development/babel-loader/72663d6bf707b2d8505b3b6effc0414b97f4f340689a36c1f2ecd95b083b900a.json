{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, useRef, useContext } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport styles from \"./styles\";\nimport { UserMessage } from \"../../../../components/UserMessage\";\nimport { MessageInput } from \"../MessageInput\";\nimport { Button } from \"../../../../components/Button\";\nimport { AuthContext } from \"../../../../context/AuthContext\";\nimport { RequestContext } from \"../../../../context/RequestContext\";\nimport { API } from \"../../../../Api\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LogContainer = function LogContainer(_ref) {\n  var _ref2;\n  var itemId = _ref.itemId;\n  var _useContext = useContext(AuthContext),\n    user = _useContext.user;\n  var _useContext2 = useContext(RequestContext),\n    log = _useContext2.log;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    messages = _useState2[0],\n    setMessages = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    refreshing = _useState4[0],\n    setRefreshing = _useState4[1];\n  var flatListRef = useRef(null);\n  var loadMessages = function loadMessages() {\n    return (_ref2 = _ref2 || _asyncToGenerator(function* () {\n      var res = yield fetch(`${API}/messages/${itemId}`);\n      var data = yield res.json();\n      setMessages(data);\n    })).apply(this, arguments);\n  };\n  var renderMessage = function renderMessage(_ref3) {\n    var item = _ref3.item;\n    return _jsx(UserMessage, {\n      userId: item.userId,\n      content: item.content,\n      sentTime: item.sentTime,\n      local: item.userId === user.userId\n    });\n  };\n  useEffect(function () {\n    loadMessages();\n  }, [messages]);\n  var onRefresh = React.useCallback(_asyncToGenerator(function* () {\n    setRefreshing(true);\n    yield loadMessages();\n    setRefreshing(false);\n  }), []);\n  return _jsxs(View, {\n    children: [_jsxs(View, {\n      style: styles.logContainer,\n      children: [_jsx(View, {\n        style: styles.messageContainer,\n        children: _jsx(FlatList, {\n          ref: flatListRef,\n          data: messages,\n          keyExtractor: function keyExtractor(item) {\n            return item.messageId + '';\n          },\n          renderItem: renderMessage,\n          onContentSizeChange: function onContentSizeChange() {\n            return flatListRef.current.scrollToEnd({\n              animated: false\n            });\n          },\n          refreshControl: _jsx(RefreshControl, {\n            refreshing: refreshing,\n            onRefresh: onRefresh\n          })\n        })\n      }), _jsx(MessageInput, {\n        logId: log.logId\n      })]\n    }), _jsx(Button, {\n      text: 'Resolver',\n      onPress: function onPress() {\n        alert('Resolver');\n      },\n      buttonStyle: styles.button,\n      color: 'blue'\n    })]\n  });\n};\nexport default LogContainer;","map":{"version":3,"names":["React","useState","useEffect","useRef","useContext","FlatList","RefreshControl","View","Text","styles","UserMessage","MessageInput","Button","AuthContext","RequestContext","API","jsx","_jsx","jsxs","_jsxs","LogContainer","_ref","_ref2","itemId","_useContext","user","_useContext2","log","_useState","_useState2","_slicedToArray","messages","setMessages","_useState3","_useState4","refreshing","setRefreshing","flatListRef","loadMessages","_asyncToGenerator","res","fetch","data","json","apply","arguments","renderMessage","_ref3","item","userId","content","sentTime","local","onRefresh","useCallback","children","style","logContainer","messageContainer","ref","keyExtractor","messageId","renderItem","onContentSizeChange","current","scrollToEnd","animated","refreshControl","logId","text","onPress","alert","buttonStyle","button","color"],"sources":["C:/Users/Mauro Retuerto/Desktop/Mauro/FISI/CICLO 8/Moviles/Test/frontend/users/solver/components/LogContainer/LogContainer.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useContext } from 'react'\r\nimport { FlatList, RefreshControl, View, Text } from 'react-native'\r\n\r\nimport styles from './styles';\r\nimport { UserMessage } from '../../../../components/UserMessage';\r\nimport { MessageInput } from '../MessageInput';\r\nimport { Button } from '../../../../components/Button';\r\n\r\nimport { AuthContext } from '../../../../context/AuthContext';\r\nimport { RequestContext } from '../../../../context/RequestContext';\r\nimport { API } from '../../../../Api';\r\n\r\nconst LogContainer = ({ itemId }) => {\r\n  const { user } = useContext(AuthContext);\r\n  const { log } = useContext(RequestContext);\r\n  const [messages, setMessages] = useState([]);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const flatListRef = useRef(null);\r\n\r\n  const loadMessages = async () => {\r\n    const res = await fetch(`${API}/messages/${itemId}`);\r\n    const data = await res.json();\r\n    setMessages(data);\r\n  }\r\n\r\n  const renderMessage = ({ item }) => {\r\n    return <UserMessage \r\n    userId={item.userId}\r\n    content={item.content} \r\n    sentTime={item.sentTime}\r\n    local={item.userId === user.userId}\r\n    />\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadMessages();\r\n  }, [messages]);\r\n\r\n  const onRefresh = React.useCallback(async () => {\r\n    setRefreshing(true);\r\n    await loadMessages();\r\n    setRefreshing(false);\r\n  }, []);\r\n\r\n  return (\r\n    <View>\r\n      <View style={styles.logContainer}>\r\n        <View style={styles.messageContainer}>\r\n          <FlatList\r\n            ref={flatListRef}\r\n            data={messages}\r\n            keyExtractor={(item) => item.messageId + ''}\r\n            renderItem={renderMessage}\r\n            onContentSizeChange={() => flatListRef.current.scrollToEnd({ animated: false })}\r\n            refreshControl={\r\n              <RefreshControl\r\n                refreshing={refreshing}\r\n                onRefresh={onRefresh}\r\n              />\r\n            }\r\n          />\r\n        </View>  \r\n        <MessageInput \r\n          logId={log.logId}\r\n        />\r\n      </View>\r\n\r\n      <Button\r\n        text={'Resolver'}\r\n        onPress={() => {alert('Resolver')}}\r\n        buttonStyle={styles.button}\r\n        color={'blue'}\r\n      />\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default LogContainer"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}